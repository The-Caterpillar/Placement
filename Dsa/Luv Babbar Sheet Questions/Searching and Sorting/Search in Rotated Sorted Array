// Naive Solution: Perform Linear search

// Optimised Solution:
class Solution {
public:
    int search(vector<int>& arr, int target) 
    {
        int low = 0, high = arr.size()-1;

        while(low<=high)
        {
            int mid = low + (high-low)/2;
            if(arr[mid]==target) return mid;
            // target = 1
            // nums = [3,1]

            else
            {
                if(arr[low]<=arr[mid]) // Left part sorted
                {
                    if(target<=arr[mid] && target>=arr[low])
                    {
                        high = mid-1;
                    }
                    else
                    {
                        low = mid+1; 
                    }
                }
                else // Right part sorted
                {
                    if(target>arr[mid] && target<=arr[high])
                    {
                        low = mid+1;
                    }
                    else
                    {
                        high = mid-1;
                    }
                }
            }
        }
    return -1;
    }
};
