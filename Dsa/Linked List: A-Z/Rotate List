class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) 
    {
        if(head==NULL) return NULL;
        
        int n  = 0;
        ListNode *curr= head;
        while(curr!=NULL) // Counting the number of nodes in the list
        {
            n++;
            curr = curr->next;
        }
        int rotations = k%n ;
        int jumps = n - rotations;

        if(rotations == 0) return head;

        ListNode *first = head,
                 *new_head = head;
        
        curr = head;
        while(--jumps) curr = curr->next; // Jumping to  the new head

        new_head = curr->next;
        curr->next = NULL;

        curr = new_head;
        while(curr->next!=NULL) curr=curr->next;
        curr->next = head;
    
    return new_head;
    }
};
