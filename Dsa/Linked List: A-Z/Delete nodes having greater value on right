class Solution
{
    public:
    Node *reverse(Node *head)
    {
        Node *prev = NULL,
             *Next = head->next,
             *new_head = head;
             
        while(new_head->next!=NULL)
        {
            new_head->next = prev;
            prev = new_head;
            new_head = Next;
            Next = new_head->next;
        } new_head->next = prev;
    return new_head;
    }
    
    Node *compute(Node *head)
    {
        if(head==NULL) return NULL;
        if(head->next==NULL) return head;
        
        Node *reverse_head = reverse(head);
        Node *curr = reverse_head;
        int MAX = reverse_head->data;
        
        while(reverse_head->next!=NULL)
        {
            if(reverse_head->next->data < MAX)
            {
                reverse_head->next = reverse_head->next->next;
            }
            else 
            {
                MAX = reverse_head->next->data;
                reverse_head = reverse_head->next;
            }
        }
        
    reverse_head = reverse(curr);
    return  reverse_head;
    }
};
